[{"D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\napster-api\\src\\index.js":"1","D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\napster-api\\src\\reportWebVitals.js":"2","D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\napster-api\\src\\Player\\Player.js":"3","D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\napster-api\\src\\TrackInfo\\TrackInfo.js":"4","D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\napster-api\\src\\Controls\\Controls.js":"5","D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\napster-api\\src\\Audio\\Audio.js":"6","D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\napster-api\\src\\App\\App.js":"7"},{"size":504,"mtime":1612367591630,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":2274,"mtime":1612367470139,"results":"11","hashOfConfig":"9"},{"size":331,"mtime":1612399317960,"results":"12","hashOfConfig":"9"},{"size":1279,"mtime":1612363230564,"results":"13","hashOfConfig":"9"},{"size":174,"mtime":1612363243955,"results":"14","hashOfConfig":"9"},{"size":985,"mtime":1612377180599,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xbdclp",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\napster-api\\src\\index.js",[],"D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\napster-api\\src\\reportWebVitals.js",[],["33","34"],"D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\napster-api\\src\\Player\\Player.js",["35"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport Controls from \"../Controls/Controls\"\r\nimport TrackInfo from \"../TrackInfo/TrackInfo\"\r\nimport Audio from \"../Audio/Audio\"\r\n\r\n\r\nexport default function Player({tracks}) {\r\n\r\n  const [currentSongIdx, setCurrentSongIdx] = useState(-1);\r\n  const audioRef = useRef();\r\n\r\n\r\n  //HANDLERS\r\n\r\n  function handleNextSong() {\r\n    setCurrentSongIdx(curr => (curr + 1 === tracks.length ? 0 : curr + 1));\r\n  }\r\n  function handlePrevSong() {\r\n    setCurrentSongIdx(curr => (curr - 1 < 0 ? tracks.length - 1 : curr - 1));\r\n  }\r\n\r\n  function handlePlay() {\r\n    audioRef.current.play();\r\n  }\r\n\r\n  function handlePause() {\r\n    audioRef.current.pause();\r\n  }\r\n\r\n  //Fix for the error triggered by pause() being called before the previous play() promise is fulfilled (it resolves only when the audio track is fully loaded ).\r\n  // By playing the audio track only when the audio is fully loaded, it doesn't start to play when you switch quickly because the \"canplay\" event is never triggered!\r\n\r\n  useEffect(() => {\r\n      const audio = audioRef.current\r\n   audio.addEventListener(\"canplay\", handlePlay);\r\n    return () =>\r\n     audio.removeEventListener(\"canplay\", handlePlay);\r\n  }, []);\r\n\r\n  //console.log(\"RERENDERING APP...IS LOADING TRACK?\", isLoading, currentSongIdx, prevIdx);\r\n  console.log(tracks)\r\n  return (\r\n    <div>\r\n      <h4>CURRENT SONG:</h4>\r\n      <h5>{tracks && tracks[currentSongIdx]?.name}</h5>\r\n      <Controls\r\n        handleNextSong={handleNextSong}\r\n        handlePrevSong={handlePrevSong}\r\n        handlePlay={handlePlay}\r\n        handlePause={handlePause}\r\n        audioRef={audioRef}\r\n      />\r\n      <div>\r\n        {tracks?.map(({ name }, idx) => (\r\n          <TrackInfo\r\n            key={name + idx}\r\n            color={idx === currentSongIdx ? \"green\" : \"red\"}\r\n            data={{ name }}\r\n            setCurrentSongIdx={setCurrentSongIdx}\r\n            idx={idx}\r\n          />\r\n        ))}\r\n      </div>\r\n      ;\r\n      <Audio src={tracks && tracks[currentSongIdx]?.src} audioRef={audioRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n// CUSTOM HOOK\r\n\r\nfunction usePreviousProp(prop) {\r\n  const ref = useRef(\"No props yet!\");\r\n  useEffect(() => {\r\n    ref.current = prop;\r\n  });\r\n  return ref.current;\r\n}\r\n","D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\napster-api\\src\\TrackInfo\\TrackInfo.js",[],"D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\napster-api\\src\\Controls\\Controls.js",["36"],"import React, { useState, useEffect } from \"react\"\r\n\r\nexport default function Controls({\r\n    handleNextSong,\r\n    handlePrevSong,\r\n    handlePlay,\r\n    handlePause,\r\n    audioRef\r\n  }) {\r\n    const [perc, setPerc] = useState(0);\r\n  \r\n    //ADD LISTENERS\r\n  \r\n    useEffect(() => {\r\n        const audio = audioRef.current\r\n      const handleUpdate = ({ target }) =>\r\n        setPerc(calcPerc(target.currentTime, target.duration));\r\n      audio.addEventListener(\"timeupdate\", handleUpdate);\r\n      return () =>\r\n        audio.removeEventListener(\"timeupdate\", handleUpdate);\r\n    }, []);\r\n  \r\n    return (\r\n      <div>\r\n        <button onClick={handlePlay}>PLAY</button>\r\n        <button onClick={handlePause}>PAUSE</button>\r\n        <button onClick={handleNextSong}>NEXT</button>\r\n        <button onClick={handlePrevSong}>BACK</button>\r\n        <span>{bar(perc)}</span>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  \r\n  function bar(perc) {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: perc ? perc + \"%\" : 0,\r\n          height: \"20px\",\r\n          background: \"#000\"\r\n        }}\r\n      >\r\n        <h5 style={{ color: \"#FFF\" }}>{perc}%</h5>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  //HELPER\r\n\r\nconst calcPerc = (curr, total) => {\r\n    return Math.floor((curr * 100) / total);\r\n  };\r\n  ","D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\napster-api\\src\\Audio\\Audio.js",[],"D:\\dev-projects\\Projects\\Webdev\\full-projects\\personal-projects\\napster-api\\src\\App\\App.js",["37","38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":74,"column":10,"nodeType":"45","messageId":"46","endLine":74,"endColumn":25},{"ruleId":"47","severity":1,"message":"48","line":21,"column":8,"nodeType":"49","endLine":21,"endColumn":10,"suggestions":"50"},{"ruleId":"43","severity":1,"message":"51","line":1,"column":38,"nodeType":"45","messageId":"46","endLine":1,"endColumn":44},{"ruleId":"43","severity":1,"message":"52","line":6,"column":7,"nodeType":"45","messageId":"46","endLine":6,"endColumn":17},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'usePreviousProp' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'audioRef'. Either include it or remove the dependency array.","ArrayExpression",["55"],"'useRef' is defined but never used.","'URL_genres' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},"Update the dependencies array to be: [audioRef]",{"range":"58","text":"59"},[582,584],"[audioRef]"]